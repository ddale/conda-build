.....
-------------------
  * add --all-extras flag to skeleton pypi

2014-08-05   1.7.0:
-------------------
  * better install_requires parsing for skeleton pypi
  * the build environment from conda-build is now called
    _build____________________________________________________________________________________________________.
    This is so that recipes with binary_has_prefix_files build against a
    sufficiently long prefix.
  * don't overwrite the input file in convert
  * fix a bug related to the prefix_files.txt file
  * show the download bytes in human form in skeleton pypi
  * make patchelf error message clearer
  * fix some issues with the git describe environment variables
  * improve shebang line modifications with python.app
  * show the download bytes in human form in skeleton pypi

2014-07-29   1.6.1:
-------------------
  * fix an issue building with a git repository in Python 3

2014-07-29   1.6.0:
-------------------
  * don't fail on MachO stub files on OS X
  * add some git describe related environment variables when the source is a
    git repository
  * add --python and --numpy flags to conda build, which do the same thing as
    setting CONDA_PY and CONDA_NPY
  * allow a . in CONDA_PY and CONDA_NPY
  * correctly catch RuntimeError
  * fix an issue building some packages on Windows
  * make skeleton pypi --recursive work with versioned dependencies
  * some additional type checking for meta.yaml
  * always include numpy in skeleton pypi

2014-07-03   1.5.0:
-------------------
  * add bdist_conda
  * fix features and track_features
  * detect files with the build prefix automatically on Windows

2014-07-01   1.4.0:
-------------------
  * fix skeleton pypi behind a proxy
  * add binary_has_prefix_files, which does a binary prefix replacement
  * fix skeleton pypi on Windows
  * allow the git_url to be a relative path to the recipe directory


2014-06-04   1.3.5:
-------------------
  * the yaml script tag was only written if build.sh already existed,
    see issue #105
  * use tests_require to fill in test requirements in the setuptools
    template, see issue #107


2014-06-02   1.3.4:
-------------------
  * add --build-only and --post flags to conda-build
  * add conda convert -p all
  * allow to set __conda_buildnum__.txt and __conda_buildstr__.txt, analogous
    to __conda_version__.txt


2014-04-28   1.3.3:
-------------------
  * add SHA256 support for downloaded source
  * conda convert now creates platform directories, like
    win-32/converted_package.tar.bz2
  * allow to specify the version of python, numpy, or perl in the meta.yaml
    (it will ignore the CONDA_PY, CONDA_NPY, or CONDA_PERL, respectively, in
    this case)


2014-04-15   1.3.2:
-------------------
  * allow changing conda-bld directory (which is by default <root>/conda-bld
    when the conda root is not writable, and ~/conda-bld otherwise), to be
    changed by CONDA_BLD_PATH environment variable or conda-build: root-dir:
    in condarc file
  * add build/has_prefix_files
  * remove broken conda-build/build_dest
  * fix build in Windows Python 2
  * add --quiet option to conda-build
  * add check for characters in package name dependencies
  * add .class to the object file extension blacklist
  * removed build/no_softlink in favor of build/no_link with list of glob
    syntax


2014-03-25   1.3.1:
-------------------
  * add conda metapackage command
  * fix recursive conda building when dependencies are nested more than one
    level deep.
  * fix build in Windows Python 2
  * fix skeleton pypi for packages whose setup.py has __future__ imports
  * add conda pipbuild command which uses a simple recipe based on pip
    install to build a conda package
  * fix skeleton pypi and pipbuild when package data does not have classifiers
  * add a basic conda develop command
  * add the --recursive option to conda skeleton pypi
  * conda skeleton pypi no longer asks about single line licenses
  * conda skeleton pypi now queries pypi case insensitively
  * conda skeleton pypi now works in a different conda environment. This
    avoids anything bad that might happen when trying to get the metadata from
    the package from messing up the root environment.
  * conda skeleton pypi now patches distribute directly. This is more robust
    than trying to insert a patch into setup.py, as was done previously.
  * allow to set the version post-build by writing a __conda_version__.txt
    file to the source directory.
  * add ability to skip binary relocation step by
    setting "build/binary_relocation: False" in meta.yaml


2014-03-14   1.3.0:
-------------------
  * add skeleton for CPAN Perl packages, issue #53. Unlike
    the PyPI skeleton, it supports a --recursive option to
    also generate the recipes for all of the dependencies of
    a given module/distribution
  * add support for run_test.pl and Perl import tests when
    building Perl packages
  * add CONDA_PERL environment variable support for
    determining which version of Perl to build packages for.
    Unlike CONDA_PY, this must include the full version with
    periods (e.g., 5.18.2)
  * automatically build packages for dependencies if the recipe is
    present in the current working directory
  * fix a number of Python 3 compatibility issues, issue #59
  * work with source files with uppercase suffixes
  * switch from chrpath to patchelf on Linux, issue #57
  * don't use hard-coded msvc path
  * sort import tests from skeleton pypi


2014-02-25   1.2.1:
-------------------
  * added conda-build/build_dest option to condarc


2014-02-13   1.2.0:
-------------------
  * make sure WORK_DIR exists
  * use MSVC 2010 for Python 3
  * include the summary with conda skeleton pypi
  * fix object detection on Python 3
  * update default CONDA_NPY to 18


2014-02-06   1.1.0:
-------------------
  * add ability to use templates in conda recipes
  * remove fallback to <root>/conda-recipes, i.e. conda-build always
    expects the full path to the recipe
  * export PKG Build Number
  * add pre-link to package, when it is found in recipe
  * allow to add run_test.sh or run_test.bat, which will be run automatically
    during the test phase.
  * Test commands from the test/commands section of meta.yaml are run from
    bash on Linux and OS X and batch on Windows (previously they were run
    using Python's subprocess).
  * all environment variables from the build process are available during the
    tests, except with the build prefix replaced with the test prefix.


2014-01-24   1.0.0:
-------------------
  * initial release
  * includes conda-build, conda-convert, conda-index, conda-skeleton
  * depends on new conda version 3
  * add license to info/index.json object
